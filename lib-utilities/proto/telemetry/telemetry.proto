//(C) Copyright [2020] Hewlett Packard Enterprise Development LP
//
//Licensed under the Apache License, Version 2.0 (the "License"); you may
//not use this file except in compliance with the License. You may obtain
//a copy of the License at
//
//    http:#www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
//WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
//License for the specific language governing permissions and limitations
// under the License

syntax = "proto3";

service Telemetry {
    rpc GetTelemetryService(TelemetryRequest) returns (TelemetryResponse) {}
    rpc GetMetricDefinitionCollection(TelemetryRequest) returns (TelemetryResponse) {}
    rpc GetMetricReportDefinitionCollection(TelemetryRequest) returns (TelemetryResponse) {}
    rpc GetMetricReportCollection(TelemetryRequest) returns (TelemetryResponse) {}
    rpc GetTriggerCollection(TelemetryRequest) returns (TelemetryResponse) {}
    rpc GetMetricDefinition(TelemetryRequest) returns (TelemetryResponse) {}
    rpc GetMetricReportDefinition(TelemetryRequest) returns (TelemetryResponse) {}
    rpc GetMetricReport(TelemetryRequest) returns (TelemetryResponse) {}
    rpc GetTrigger(TelemetryRequest) returns (TelemetryResponse) {}
    rpc UpdateTrigger(TelemetryRequest) returns (TelemetryResponse) {}
}

message TelemetryRequest {
    string SessionToken = 1;
    string URL = 2;
    bytes RequestBody = 3;
    string resourceID=4;
}

message TelemetryResponse {
    int32 statusCode = 1;
    string statusMessage = 2;
    map<string, string> header = 3;
    bytes body = 4;
}
