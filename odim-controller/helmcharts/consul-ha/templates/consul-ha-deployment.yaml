---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consul1
  namespace: {{ .Values.odimra.namespace }}
  labels:
    app: odim-ra
    unit: consul
spec:
  replicas: 1
  selector:
    matchLabels:
      app: odim-ra
      unit: consul
      parentdeployment: odim-ra
  template:
    metadata:
      labels:
        app: odim-ra
        unit: consul
        parentdeployment: odim-ra
    spec:
      hostname: consul1
      subdomain: consul
      securityContext:
        fsGroup: {{ .Values.odimra.groupID }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "unit"
                  operator: In
                  values:
                  - consul
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: consul1
          image: consul:{{ .Values.odimra.consulImageTag }}
          imagePullPolicy: IfNotPresent
          env:
            - name: IS_CONSUL_CLUSTER
              value: 'true'
            - name: CONSUL_CLUSTER_MEMBERS
              value: "consul2.consul.{{ .Values.odimra.namespace }}.svc.cluster.local:8301,\
		      consul3.consul.{{ .Values.odimra.namespace }}.svc.cluster.local:8301"
            - name: CONSUL_SERVICE_NAME
              value: consul1
          ports:
            - name: c1-rpc-svc
              containerPort: 8300
            - name: c1-lan-serf
              containerPort: 8301
            - name: c1-wan-serf
              containerPort: 8302
            - name: c1-api-svc
              containerPort: 8500
            - name: c1-dns-svc
              containerPort: 8600
          volumeMounts:
            - mountPath: /consul/data
              name: consul-data-pv
      volumes:
        - name: consul-data-pv
          persistentVolumeClaim:
            claimName: consul-data-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consul2
  namespace: {{ .Values.odimra.namespace }}
  labels:
    app: odim-ra
    unit: consul
spec:
  replicas: 1
  selector:
    matchLabels:
      app: odim-ra
      unit: consul
      parentdeployment: odim-ra
  template:
    metadata:
      labels:
        app: odim-ra
        unit: consul
        parentdeployment: odim-ra
    spec:
      hostname: consul2
      subdomain: consul
      securityContext:
        fsGroup: {{ .Values.odimra.groupID }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "unit"
                  operator: In
                  values:
                  - consul
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: consul2
          image: consul:{{ .Values.odimra.consulImageTag }}
          imagePullPolicy: IfNotPresent
          env:
            - name: IS_CONSUL_CLUSTER
              value: 'true'
            - name: CONSUL_CLUSTER_MEMBERS
              value: "consul1.consul.{{ .Values.odimra.namespace }}.svc.cluster.local:8301,\
		      consul3.consul.{{ .Values.odimra.namespace }}.svc.cluster.local:8301"
            - name: CONSUL_SERVICE_NAME
              value: consul2
          ports:
            - name: c2-rpc-svc
              containerPort: 8300
            - name: c2-lan-serf
              containerPort: 8301
            - name: c2-wan-serf
              containerPort: 8302
            - name: c2-api-svc
              containerPort: 8500
            - name: c2-dns-svc
              containerPort: 8600
          volumeMounts:
            - mountPath: /consul/data
              name: consul-data-pv
      volumes:
        - name: consul-data-pv
          persistentVolumeClaim:
            claimName: consul-data-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consul3
  namespace: {{ .Values.odimra.namespace }}
  labels:
    app: odim-ra
    unit: consul
spec:
  replicas: 1
  selector:
    matchLabels:
      app: odim-ra
      unit: consul
      parentdeployment: odim-ra
  template:
    metadata:
      labels:
        app: odim-ra
        unit: consul
        parentdeployment: odim-ra
    spec:
      hostname: consul3
      subdomain: consul
      securityContext:
        fsGroup: {{ .Values.odimra.groupID }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "unit"
                  operator: In
                  values:
                  - consul
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: consul3
          image: consul:{{ .Values.odimra.consulImageTag }}
          imagePullPolicy: IfNotPresent
          env:
            - name: IS_CONSUL_CLUSTER
              value: 'true'
            - name: CONSUL_CLUSTER_MEMBERS
              value: "consul1.consul.{{ .Values.odimra.namespace }}.svc.cluster.local:8301,\
		      consul2.consul.{{ .Values.odimra.namespace }}.svc.cluster.local:8301"
            - name: CONSUL_SERVICE_NAME
              value: consul3
          ports:
            - name: c3-rpc-svc
              containerPort: 8300
            - name: c3-lan-serf
              containerPort: 8301
            - name: c3-wan-serf
              containerPort: 8302
            - name: c3-api-svc
              containerPort: 8500
            - name: c3-dns-svc
              containerPort: 8600
          volumeMounts:
            - mountPath: /consul/data
              name: consul-data-pv
      volumes:
        - name: consul-data-pv
          persistentVolumeClaim:
            claimName: consul-data-pvc
