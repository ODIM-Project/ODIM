apiVersion: apps/v1 
kind: StatefulSet
metadata:
  name: redis-ha-inmemory-secondary
  namespace: {{ .Values.odimra.namespace }}
  labels:
    app: redis-ha-inmemory
  annotations:
    secret.reloader.stakater.com/reload: "odimra-secret"
spec:
  replicas: {{ .Values.odimra.redisSecondayReplicaCount }}
  serviceName: redis-ha-inmemory-headless
  selector:
    matchLabels:
      app: redis-ha-inmemory
      role: node
  template:
    metadata:
      labels:
        app: redis-ha-inmemory
        role: node
    spec:
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-ha-inmemory-data-claim
        - name: odimra-secret
          secret:
            secretName: odimra-secret
            items:
            - key: rootCAcrt
              path: rootCA.crt
              mode: 0444
            - key: odimra_servercrt
              path: odimra_server.crt
              mode: 0444
            - key: odimra_serverkey
              path: odimra_server.key
              mode: 0444
            - key: odimra_rsapublic
              path: odimra_rsa.public
              mode: 0444
            - key: odimra_rsaprivate
              path: odimra_rsa.private
              mode: 0444
            - key: redis_inmemory_password
              path: redis_inmemory_password
              mode: 0444
            - key: redis_ondisk_password
              path: redis_ondisk_password
              mode: 0444
            {{- if eq .Values.odimra.messageBusType "Kafka" }}
            - key: odimra_kafka_clientcrt
              path: odimra_kafka_client.crt
              mode: 0444
            - key: odimra_kafka_clientkey
              path: odimra_kafka_client.key
              mode: 0444
            {{- end }}
      restartPolicy: Always
      securityContext:
        fsGroup: {{ .Values.odimra.groupID }}
        runAsUser: {{ .Values.odimra.userID }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "node-role.kubernetes.io/control-plane"
                operator: Exists
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app"
                  operator: In
                  values:
                  - redis-ha-inmemory
            topologyKey: "kubernetes.io/hostname"

      containers:
      - name: redis
        image: {{ .Values.odimra.imageRegistryAddress| default  }}redis:{{ .Values.odimra.redisImageTag }}
        imagePullPolicy: IfNotPresent

        ports:
        - containerPort: 6379

        volumeMounts:
          - mountPath: "/redis-data"
            name: redis-data
            readOnly: false
          - name: odimra-secret
            mountPath: /etc/odimra_certs

        env:
        - name: MASTER
          value: "false"
        - name: MASTER_HOST_NAME
          value: "redis-ha-inmemory-primary-0.redis-ha-inmemory-headless.odim.svc.cluster.local"
        - name: REDIS_ONDISK_DB 
          value: "false"
        - name: TLS_CERT_FILE
          value: "/etc/odimra_certs/odimra_server.crt"
        - name: TLS_KEY_FILE
          value: "/etc/odimra_certs/odimra_server.key"
        - name: TLS_CA_CERT_FILE
          value: "/etc/odimra_certs/rootCA.crt"
        - name: REDIS_HA_REDIS_SERVICE_HOST 
          value: "redis-ha-inmemory.{{ .Values.odimra.namespace }}.svc.cluster.local"
        - name: REDIS_HA_REDIS_SERVICE_PORT
          value: "6379"
        - name: REDIS_DEFAULT_PASSWORD 
          value: {{ .Values.odimra.redisInMemoryPassword }}
        - name: ODIMRA_RSA_PRIVATE_FILE
          value: "/etc/odimra_certs/odimra_rsa.private"
        - name: REDIS_HA_SENTINEL_SERVICE_PORT
          value: "26379"
        - name: REDIS_HA_SENTINEL_SERVICE_HOST
          value: "redis-ha-inmemory-sentinel.{{ .Values.odimra.namespace }}.svc.cluster.local"
        - name: REDIS_MASTER_SET
          value: {{ .Values.odimra.redisMasterSet | quote }}
