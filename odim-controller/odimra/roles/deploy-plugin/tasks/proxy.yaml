- name: Check if {{ odimPluginPath }}/{{ release_name }}/{{ release_name }}_proxy_server.conf.j2 exists
  stat:
    path: "{{ odimPluginPath }}/{{ release_name }}/{{ release_name }}_proxy_server.conf.j2"
  register: stat_result
  delegate_to: localhost

- name: Include user defined {{ release_name }} configurations
  include_vars: "{{ odimPluginPath }}/{{ release_name }}/{{ release_name }}-config.yaml"
  when: stat_result.stat.exists and stat_result.stat.isreg

- name: Prepare and copy proxy conf for {{ release_name }} service
  block:
    - set_fact:
        cur_host_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
        node_port: "{{ hostvars[inventory_hostname][release_name]['eventListenerNodePort'] }}"
        proxy_port: "{{ hostvars[inventory_hostname][release_name]['lbPort'] }}"

    - set_fact:
        pluginserverlist: ["server {{ cur_host_ip }}:{{ node_port }} max_fails=2 fail_timeout=10s;"]

    - set_fact:
        pluginserverlist: "{{ pluginserverlist + [server] }}"
      with_items: "{{ groups.all }}"
      vars:
        server: "server {{ hostvars[server_item].ansible_host }}:{{ node_port }} max_fails=2 fail_timeout=10s backup;"
      when: hostvars[server_item].ansible_host != cur_host_ip
      loop_control:
        loop_var: server_item

    - name: Replace values in {{ release_name }} proxy conf template for dualstack
      template:
        src: "{{ odimPluginPath }}/{{ release_name }}/{{ release_name }}_proxy_server.conf.j2"
        dest: "/opt/nginx/servers/{{ release_name }}_proxy_server.conf"
      with_items:
        - selfNodeIP: "{{ cur_host_ip }}"
          virtualIP: "{{ odimra.virtualIP }}"
          pluginProxyPort: "{{ proxy_port }}"
          pluginServerList: "{{ pluginserverlist|join('\n')|indent(8, True) }}"
          dualStack: "True"
          virtualIPv6: "{{ odimra.virtualIPv6 }}"
          selfNodeIPv6: "{{ hostvars[inventory_hostname].ip6 }}"
      when: nwPreference == 'dualStack'
      loop_control:
        loop_var: plugin_item  
      delegate_to: "{{ item }}"  

    - name: Replace values in {{ release_name }} proxy conf template for ipv4
      template:
        src: "{{ odimPluginPath }}/{{ release_name }}/{{ release_name }}_proxy_server.conf.j2"
        dest: "/opt/nginx/servers/{{ release_name }}_proxy_server.conf"
      with_items:
        - selfNodeIP: "{{ cur_host_ip }}"
          virtualIP: "{{ odimra.virtualIP }}"
          pluginProxyPort: "{{ proxy_port }}"
          pluginServerList: "{{ pluginserverlist|join('\n')|indent(8, True) }}"
          dualStack: "False"
          virtualIPv6: ""
          selfNodeIPv6: "" 
      when: nwPreference == 'ipv4'  
      loop_control:
        loop_var: plugin_item    
      delegate_to: "{{ item }}"

    - name: Reload nginx to update {{ release_name }} conf
      systemd:
        name: nginx.service
        state: reloaded
      delegate_to: "{{ item }}"
      ignore_errors: true
  when: stat_result.stat.exists and stat_result.stat.isreg

