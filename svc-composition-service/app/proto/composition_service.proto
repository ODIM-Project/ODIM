syntax = "proto3";

service Composition {
	rpc GetCompositionService(GetCompositionServiceRequest) returns(CompositionServiceResponse) {}
	rpc GetCompositionResource(GetCompositionResourceRequest) returns(CompositionServiceResponse) {}
	rpc CreateCompositionResource(CreateCompositionResourceRequest) returns(CompositionServiceResponse) {}
	rpc DeleteCompositionResource(DeleteCompositionResourceRequest) returns(CompositionServiceResponse) {}
	rpc Compose(ComposeRequest) returns(CompositionServiceResponse) {}

}

message GetCompositionServiceRequest {
	string sessionToken=1;
    string requestParam=2;
    string URL=3;
}

message GetCompositionResourceRequest {
    string sessionToken=1;
    string requestParam=2;
    string URL=3;
    string resourceID=4;
}

message CreateCompositionResourceRequest{
    string SessionToken = 1;
    string URL = 2;
    bytes RequestBody = 3;
}

message DeleteCompositionResourceRequest{
    string SessionToken = 1;
    string URL = 2;
}

message ComposeRequest {
    string sessionToken=1;
	string URL = 2;
    bytes RequestBody = 3;
} 

message CompositionServiceResponse {
	int32 statusCode = 1;
    string statusMessage = 2;
    map<string,string> header=3;
    bytes body = 4;  
}
